{
  "name": "Maneuvers: Pushing Attack",
  "type": "feat",
  "img": "icons/skills/melee/blade-tip-chipped-blood-red.webp",
  "data": {
    "description": {
      "value": "<p>When you hit a creature with a weapon attack, you can expend one superiority die to attempt to drive the target back. You add the superiority die to the attack’s damage roll, and if the target is Large or smaller, it must make a Strength saving throw. On a failed save, you push the target up to 15 feet away from you.</p>\n<p> </p>\n<details>\n<summary><strong>USEAGE: </strong> <span style=\"color:#169179\">ACTIVATE AFTER ATTACK</span></summary>\n<p>This Maneuver must be activated AFTER the character makes an attack and knows that a HIT was successful.  This will activate any bonuses, saves, effects and extra damage to the TARGET.  A <span style=\"text-decoration:underline;color:#236fa1\">Superiority Die </span>will be expended immediately.</p>\n</details>\n<p> </p>\n<details>\n<summary><strong>SETUP:</strong></summary>\n<p>Please remember to link the use of this ability to a character sheet resource under the item details Resource Consumption dropdown.</p>\n<img src=\"https://user-images.githubusercontent.com/76136571/161775726-fb67bb97-5fd1-45c5-8301-bbb17e2d0f1d.png\" width=\"569\" /></details>\n<p> </p>\n<details>\n<summary><strong>VERSION INFO</strong></summary>\n<p>v1.0 March 22 2022</p>\n<p>jbowens #0415 (Discord)</p>\n<p>https://github.com/jbowensii/More-Automated-Spells-Items-and-Feats.git</p>\n</details>",
      "unidentified": ""
    },
    "source": "PHB p74",
    "activation": {
      "type": "special",
      "cost": null,
      "condition": ""
    },
    "duration": {
      "value": null,
      "units": ""
    },
    "target": {
      "value": null,
      "width": null,
      "units": "",
      "type": "creature"
    },
    "range": {
      "value": null,
      "long": null,
      "units": ""
    },
    "uses": {
      "value": null,
      "max": "",
      "per": ""
    },
    "consume": {
      "type": "attribute",
      "target": "",
      "amount": 1
    },
    "ability": "str",
    "actionType": "save",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [
        [
          "0 + @flags.dae.SuperiorityDie[Superiority]",
          ""
        ]
      ],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "str",
      "dc": 16,
      "scaling": "str"
    },
    "requirements": "Fighter: Battlemaster",
    "recharge": {
      "value": null,
      "charged": false
    },
    "attunement": 0
  },
  "effects": [],
  "flags": {
    "ddbimporter": {
      "id": "2439086",
      "entityTypeId": "222216831",
      "componentId": 1306902,
      "componentTypeId": 258900837,
      "class": "Fighter",
      "subclass": "Battle Master",
      "importId": "28pyz8r4w0vt0973"
    },
    "infusions": {
      "infused": false
    },
    "obsidian": {
      "source": {
        "type": "class",
        "text": "Fighter"
      }
    },
    "scene-packer": {
      "hash": "5f149d2c396c0a496ecdad6404c23ab235745878",
      "sourceId": "Item.l4bndCWKdYVIxwd8"
    },
    "spellTemplateManager": {
      "stmData": {
        "ignoreDuration": false,
        "spellTexture": "",
        "useTexture": false,
        "alpha": 50,
        "coneOrigin": 1,
        "loopAnimations": true
      }
    },
    "midi-qol": {
      "effectActivation": false,
      "onUseMacroName": "[all]ItemMacro"
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false
    },
    "magicitems": {
      "enabled": false,
      "equipped": false,
      "attuned": false,
      "charges": "0",
      "chargeType": "c1",
      "destroy": false,
      "destroyFlavorText": "reaches 0 charges: it crumbles into ashes and is destroyed.",
      "rechargeable": false,
      "recharge": "0",
      "rechargeType": "t1",
      "rechargeUnit": "r1",
      "sorting": "l"
    },
    "favtab": {
      "isFavorite": true
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Maneuvers: Pushing Attack",
          "type": "script",
          "author": "ldRsJ6Yp5qPydWA1",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "/*****\nFighter Battlemaster Maneuvers: Pushing Attack\n\nUSEAGE : ACTIVATE AFTER ATTACK\nThis Maneuver must be activated AFTER the character makes an attack and knows that a \nHIT was successful.  This will activate any bonuses, saves, effects and extra damage \nto the TARGET.  A Superiority Die will be expended immediately.\n\nv1.2 May 7 2022 jbowens #0415 (Discord) https://github.com/jbowensii/More-Automated-Spells-Items-and-Feats.git \n*****/\n\nif (args[0].macroPass === \"postSave\") {\n\n    // check to make sure only one target is selected\n    if ((args[0].targetUuids.length < 1) || (args[0].targetUuids.length > 1)) {\n        ui.notifications.error(\"You need to select a single target.\");\n        await incrementResource(pcActor, \"Superiority Dice\", 1);\n        return;\n    }\n\n    // setup common variables\n    const workflow = MidiQOL.Workflow.getWorkflow(args[0].uuid);\n    const target = await fromUuid(args[0].targetUuids[0]);\n    const diagonalRule = canvas.grid.diagonRule;\n\n    // If save failed\n    if (workflow.failedSaves.size >= 1) {\n        //prompt for push distance\n        let dialog = new Promise((resolve, reject) => {\n            new Dialog({\n                // localize this text\n                title: \"Battle Master: Pushing Attack\",\n                content: \"<p>How far would you like to push the target?</p>\",\n                buttons: {\n                    one: {\n                        icon: '<p> </p><img src = \"systems/dnd5e/icons/skills/water_09.jpg\" width=\"60\" height=\"60\"></>',\n                        label: \"<p>5 ft.</p>\",\n                        callback: () => resolve(1)\n                    },\n                    two: {\n                        icon: '<p> </p><img src = \"systems/dnd5e/icons/skills/shadow_19.jpg\" width=\"60\" height=\"60\"></>',\n                        label: \"<p>10 ft.</p>\",\n                        callback: () => { resolve(2) }\n                    },\n                    three: {\n                        icon: '<p> </p><img src = \"systems/dnd5e/icons/skills/fire_02.jpg\" width=\"60\" height=\"60\"></>',\n                        label: \"<p>15 ft.</p>\",\n                        callback: () => { resolve(3) }\n                    }\n                },\n                default: \"three\"\n            }).render(true);\n        });\n\n        const distanceTravelled = await dialog;\n\n        //  create a ray to measure the angle to travel\n        canvas.grid.diagonalRule = \"EUCL\";\n        let travelRay = new Ray(token.center, target.object.center);\n        const angle = travelRay.angle;\n        travelRay.distance = travelRay.dx * distanceTravelled;\n\n        // create a new ray with the same angle but shorter to allow for the token sizes\n        travelRay = Ray.fromAngle(token.x, token.y, angle,\n            Math.floor(travelRay.distance + Math.sqrt(target.object.height ** 2 + target.object.width ** 2) / 2));\n        canvas.grid.diagonalRule = diagonalRule;\n\n        // update the canvas to move the token\n        await target.data.document.update(canvas.grid.getSnappedPosition(travelRay.B.x, travelRay.B.y));\n    }\n}\nreturn;\n\n//---------------------------------- MY FUNCTIONS -------------------------------------------\n\n// Increment available resource\nasync function incrementResource(testActor, resourceName, numValue) {\n    let actorDup = duplicate(testActor);\n    let resources = Object.values(actorDup.data.resources);\n    let foundResource = resources.find(i => i.label.toLowerCase() === resourceName.toLowerCase());\n    if (foundrResource) {\n        foundResource.value = foundResource.value + numValue;\n        await testActor.update(actorDup);\n    } else ui.notifications.error(\"You have not setup a Superiority Dice resource.\");\n    return;\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "core": {
      "sourceId": "Item.QCt9G1ryLky9enrK"
    },
    "cf": {
      "id": "temp_fgyhz98iq6m",
      "path": "DDB Override#/CF_SEP/Battlemaster Maneuvers",
      "color": "#000000"
    },
    "exportSource": {
      "world": "test",
      "system": "dnd5e",
      "coreVersion": "9.269",
      "systemVersion": "1.6.1"
    }
  }
}