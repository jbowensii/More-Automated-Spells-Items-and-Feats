{
  "name": "Maneuvers: Precision Attack",
  "type": "feat",
  "img": "systems/dnd5e/icons/skills/yellow_16.jpg",
  "data": {
    "description": {
      "value": "<h2><strong>USEAGE :</strong> <span style=\"color:#169179\">PLACE HOLDER<br /></span></h2>\n<p>This item should be placed on the character that has the Precision Attack Manuever.  This items places an effect on the Actor that allows the rolling of a Superiority Die to be added to the attack Roll before the TO HIT is evaluated.</p>\n<p> </p>\n<h2><strong>MANEUVER DESCRIPTION: </strong></h2>\n<p>When you make a weapon attack roll against a creature, you can expend one superiority die to add it to the roll. You can use this maneuver before or after making the attack roll, but before any effects of the attack are applied.</p>\n<p> </p>",
      "chat": "When you make a weapon attack roll, you can expend one superiority die to add it to the roll before or after the roll but before any effects are applied.\n<details>\n  <summary>\n    More Details\n  </summary>\n  <p>\n    </p><p>When you make a weapon attack roll against a creature, you can expend one superiority die to add it to the roll. You can use this maneuver before or after making the attack roll, but before any effects of the attack are applied.</p>\n  <p></p>\n</details>",
      "unidentified": ""
    },
    "source": "PHB [v1.0]",
    "activation": {
      "type": "special",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": null,
      "units": ""
    },
    "target": {
      "value": null,
      "width": null,
      "units": "",
      "type": "self"
    },
    "range": {
      "value": null,
      "long": null,
      "units": ""
    },
    "uses": {
      "value": null,
      "max": "",
      "per": ""
    },
    "consume": {
      "type": "attribute",
      "target": "",
      "amount": 1
    },
    "ability": "",
    "actionType": "other",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "requirements": "Fighter: Battlemaster",
    "recharge": {
      "value": null,
      "charged": false
    },
    "attunement": 0
  },
  "effects": [
    {
      "_id": "og6qejg1f0p7b8ws",
      "changes": [
        {
          "key": "flags.midi-qol.onUseMacroName",
          "mode": 0,
          "value": "ItemMacro.Maneuvers: Precision Attack,preCheckHits",
          "priority": "1"
        }
      ],
      "disabled": false,
      "duration": {
        "startTime": null
      },
      "icon": "systems/dnd5e/icons/skills/yellow_16.jpg",
      "label": "Maneuvers: Precision Attack",
      "origin": "Actor.67GUmdTadYmGXD8W.Item.RryNpmf0SaXo2jua",
      "transfer": true,
      "flags": {
        "core": {
          "statusId": ""
        },
        "dae": {
          "stackable": "none",
          "durationExpression": "",
          "macroRepeat": "none",
          "specialDuration": [],
          "transfer": true
        },
        "ActiveAuras": {
          "isAura": false,
          "aura": "None",
          "radius": null,
          "alignment": "",
          "type": "",
          "ignoreSelf": false,
          "height": false,
          "hidden": false,
          "displayTemp": false,
          "hostile": false,
          "onlyOnce": false
        }
      },
      "tint": null,
      "selectedKey": "flags.midi-qol.onUseMacroName"
    }
  ],
  "flags": {
    "ddbimporter": {
      "id": "53565",
      "entityTypeId": "222216831",
      "componentId": 17,
      "componentTypeId": 258900837,
      "class": "Fighter",
      "subclass": "Battle Master",
      "importId": "28pyz8r4w0vt0973"
    },
    "infusions": {
      "infused": false
    },
    "obsidian": {
      "source": {
        "type": "class",
        "text": "Fighter"
      }
    },
    "scene-packer": {
      "hash": "d5648f76846abae3873945cc2d81798626588890",
      "sourceId": "Item.MPgSpfk4edcTtkOI"
    },
    "spellTemplateManager": {
      "stmData": {
        "ignoreDuration": false,
        "spellTexture": "",
        "useTexture": false,
        "alpha": 50,
        "coneOrigin": 1,
        "loopAnimations": true
      }
    },
    "midi-qol": {
      "effectActivation": false
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false
    },
    "magicitems": {
      "enabled": false,
      "equipped": false,
      "attuned": false,
      "charges": "0",
      "chargeType": "c1",
      "destroy": false,
      "destroyFlavorText": "reaches 0 charges: it crumbles into ashes and is destroyed.",
      "rechargeable": false,
      "recharge": "0",
      "rechargeType": "t1",
      "rechargeUnit": "r1",
      "sorting": "l"
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Maneuvers: Precision Attack",
          "type": "script",
          "author": "ldRsJ6Yp5qPydWA1",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "/*****\nFighter Battlemaster Maneuver: Precision Attack\n\nUSEAGE : PLACE HOLDER\nThis item should be placed on the character that has the Precision Attack Manuever.  \nThis items places an effect on the Actor that allows the rolling of a Superiority Die to \nbe added to the attack Roll before the TO HIT is evaluated.\n \nMANEUVER DESCRIPTION:\nWhen you make a weapon attack roll against a creature, you can expend one superiority die \nto add it to the roll. You can use this maneuver before or after making the attack roll, \nbut before any effects of the attack are applied.\n*****/\nconst workflow = MidiQOL.Workflow.getWorkflow(args[0].uuid);\n\nif (args[0].macroPass === \"preCheckHits\") {\n    const theItem = workflow;\n\n    if ((theItem != null) && (theItem.name != \"Maneuvers: Precision Attack\")) {\n        // define Actor, Target and Item\n        const pcActor = MidiQOL.MQfromActorUuid(args[0].actorUuid);\n        \n        // Find Superiority Dice Resource\n        let resource = await findSheetResource(pcActor, \"Superiority Dice\");\n        if (!resource) { \n            ui.notifications.error(\"Could not find a recource labeled 'Superiority Dice'...\"); \n            return;\n        } \n\n        // No more Superiority Dice\n        let superiorityDice = resource.value;\n        if (superiorityDice < 1) return;\n\n        // check to make sure only one target is selected\n        if ((args[0].targetUuids.length < 1) || (args[0].targetUuids.length > 1)) {\n            ui.notifications.error(\"You need to select a single target.\");\n            return;\n        }\n\n        let superiorityDie = pcActor.getFlag(\"dae\", \"SuperiorityDie\");\n        if (superiorityDie === null) {\n            ui.notifications.error(\"You are not a fighter battle master of at least 3rd level!\");\n            return;\n        }\n\n        // make sure the attempted hit was made with a weapon attack\n        if (![\"mwak\",\"rwak\"].includes(args[0].item.data.actionType)) {\n            ui.notifications.error(\"Precision Attack only works with a weapon attack\");  \n            return;       \n        }\n        \n        // create a dialog and prompt to spend a superiority die\n        let useSuperiorityDie = false;        \n        if (superiorityDice > 0) {\n            let dialog = new Promise((resolve, reject) => {\n                new Dialog({\n                    // localize this text\n                    title: \"Battle Master: Precision Attack\",\n                    content: \"<p>Use Precision Attack (cost 1 Superiority Die)?</p>\",\n                    buttons: {\n                        one: {\n                            icon: '<p> </p><img src = \"icons/skills/targeting/crosshair-triple-strike-orange.webp\" width=\"60\" height=\"60\"></>',\n                            label: \"<p>Yes</p>\",\n                            callback: () => resolve(true)\n                        },\n                        two: {\n                            icon: '<p> </p><img src = \"systems/dnd5e/icons/skills/weapon_28.jpg\" width=\"60\" height=\"60\"></>',\n                            label: \"<p>No</p>\",\n                            callback: () => {resolve(false)}\n                        }\n                    },\n                    default: \"two\"\n                }).render(true);\n            });\n            useSuperiorityDie = await dialog;\n        } else return;\n\n        if (!useSuperiorityDie) return;\n\n        // if YES subtract a superiorty die\n        await decrimentSheetResource (pcActor, \"Superiority Dice\", 1);\n\n        console.log(\"MACRO TEST | Workflow: %O\", workflow);\n\n        // get the live MIDI-QOL workflow so we can make changes\n        let newRoll = new  Roll(`${workflow.attackRoll.result} + ${superiorityDie}`, workflow.actor.getRollData());\n        newRoll = await newRoll.evaluate({ async: true });\n        workflow.attackRoll = newRoll;\n        workflow.attackRollTotal = newRoll.total;\n        workflow.attackRollHTML = await workflow.attackRoll.render(newRoll);\n\n        return;\n    }\n}\nreturn;\n\n//---------------------------------- MY FUNCTIONS -------------------------------------\n\n// Test for available resource\n// Return resource object\nasync function findSheetResource (testActor, resourceName) {\n    let resources = Object.values(testActor.data.data.resources);\n    let foundResource = resources.find(i => i.label.toLowerCase() === resourceName.toLowerCase());\n    return foundResource;\n}\n\n// Decriment available resource\nasync function decrimentSheetResource (testActor, resourceName, numValue) {\n    let actorDup = duplicate(testActor.data._source);\n    let resources = Object.values(actorDup.data.resources);\n    let foundResource = resources.find(i => i.label.toLowerCase() === resourceName.toLowerCase());\n    foundResource.value = foundResource.value - numValue;\n    await testActor.update(actorDup); \n    return;\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "core": {
      "sourceId": "Item.agdqkK2J5m95X9ww"
    },
    "favtab": {
      "isFavorite": true
    },
    "exportSource": {
      "world": "test",
      "system": "dnd5e",
      "coreVersion": "9.255",
      "systemVersion": "1.5.7"
    }
  }
}