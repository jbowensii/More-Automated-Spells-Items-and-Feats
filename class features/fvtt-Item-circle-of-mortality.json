{
  "name": "Circle of Mortality",
  "type": "feat",
  "img": "systems/dnd5e/icons/skills/affliction_10.jpg",
  "data": {
    "description": {
      "value": "You restore maximum possible HP on each dice (instead of rolling) with healing spells to a creature with 0 HP. You learn the spare the dying cantrip, can cast it as a bonus action, and it has a range of 30 ft.",
      "chat": "You restore maximum possible HP on each dice (instead of rolling) with healing spells to a creature with 0 HP. You learn the spare the dying cantrip, can cast it as a bonus action, and it has a range of 30 ft.",
      "unidentified": ""
    },
    "source": "PHB",
    "activation": {
      "type": "special",
      "cost": null,
      "condition": ""
    },
    "duration": {
      "value": null,
      "units": ""
    },
    "target": {
      "value": null,
      "width": null,
      "units": "",
      "type": "self"
    },
    "range": {
      "value": null,
      "long": null,
      "units": ""
    },
    "uses": {
      "value": null,
      "max": "",
      "per": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "requirements": "Cleric: Grave Domain",
    "recharge": {
      "value": null,
      "charged": false
    },
    "attunement": null
  },
  "effects": [
    {
      "_id": "1jud0luaqrwjayvy",
      "changes": [
        {
          "key": "flags.midi-qol.onUseMacroName",
          "mode": 0,
          "value": "ItemMacro.Circle of Mortality,all",
          "priority": "10"
        }
      ],
      "disabled": false,
      "duration": {
        "startTime": null
      },
      "icon": "systems/dnd5e/icons/skills/affliction_10.jpg",
      "label": "Circle of Mortality",
      "origin": "Actor.Uv8E8r17bCEb1o2e.Item.3aDwBUf6nDcPVKz7",
      "transfer": true,
      "flags": {
        "core": {
          "statusId": ""
        },
        "dae": {
          "stackable": "none",
          "durationExpression": "",
          "macroRepeat": "none",
          "specialDuration": [],
          "transfer": true
        },
        "ActiveAuras": {
          "isAura": false,
          "aura": "None",
          "radius": null,
          "alignment": "",
          "type": "",
          "ignoreSelf": false,
          "height": false,
          "hidden": false,
          "displayTemp": false,
          "hostile": false,
          "onlyOnce": false
        }
      },
      "tint": null,
      "selectedKey": "flags.midi-qol.onUseMacroName"
    }
  ],
  "flags": {
    "ddbimporter": {
      "id": "53464",
      "entityTypeId": "222216831",
      "componentId": 664,
      "componentTypeId": 12168134,
      "class": "Cleric",
      "subclass": "Grave Domain",
      "dndbeyond": {
        "levelScale": null,
        "levelScales": [],
        "limitedUse": [
          {
            "level": null,
            "uses": 1
          }
        ]
      },
      "importId": "qr5dq6rdmr31r67m"
    },
    "infusions": {
      "infused": false
    },
    "obsidian": {
      "source": {
        "type": "class",
        "text": "Cleric"
      }
    },
    "scene-packer": {
      "hash": "147942c86ae8cf51b4d497a7ad4a4b8a34b40af5",
      "sourceId": "Item.YmCpxAV5LZO1E4XT"
    },
    "spellTemplateManager": {
      "stmData": {
        "ignoreDuration": false,
        "spellTexture": "",
        "useTexture": false,
        "alpha": 50,
        "coneOrigin": 1,
        "loopAnimations": true
      }
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Circle of Mortality",
          "type": "script",
          "author": "ldRsJ6Yp5qPydWA1",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "/*****\nCircle of Mortality\nAt 1st level, you gain the ability to manipulate the line between life and death. When you would normally \nroll one or more dice to restore hit points with a spell to a creature at 0 hit points, you instead \nuse the highest number possible for each die.\n\nv0.5 April 13 2022 jbowens #0415 (Discord) https://github.com/jbowensii/More-Automated-Spells-Items-and-Feats.git \n*****/\n\nif (args[0].macroPass === \"postDamageRoll\") {\n    const workflow = MidiQOL.Workflow.getWorkflow(args[0].itemUuid);\n    const actorUuid = workflow.tokenUuid;\n    const actorToken = canvas.tokens.get(workflow.tokenId);\n    const thisItem = actorToken.actor.items.find(i=> i.name === \"Circle of Mortality\")?.data;\n    let targetTokenUuid = args[0].hitTargetUuids[0];\n    let targetToken = await fromUuid(targetTokenUuid);\n    let targetActor = targetToken.actor;\n\n    // if Target HP > 0 return \n    if (targetActor.data.data.attributes.hp.value != 0) return;\n\n    // check to make sure only one target is selected\n    if ((args[0].targetUuids.length < 1) || (args[0].targetUuids.length > 1)) {\n        ui.notifications.error(\"You need to select a single target.\");\n        return;\n    }\n\n    // compute maximum healing for the spell cast\n    let healingRollMax = 0;\n    for (let i = 0; i < workflow.damageRoll.terms.length; i++) \n        if (workflow.damageRoll.terms[i]?.faces) healingRollMax = healingRollMax+(workflow.damageRoll.terms[i].faces*workflow.damageRoll.terms[i].number);\n            else if (workflow.damageRoll.terms[i]?.number) healingRollMax = healingRollMax+workflow.damageRoll.terms[i].number; \n    let bonusHealing = (healingRollMax - workflow.damageRoll.total); \n    await setProperty(workflow, \"BonusHealing\", bonusHealing);\n\n    // trigger BonusDamage to apply the extra damage / adjustments outside of the normal damage roll\n    let effectData = {\n        label : \"Healing Mortality\",\n        changes: [ {key: \"flags.dnd5e.DamageBonusMacro\", mode: 0, value: `ItemMacro.Circle of Mortality,all`, priority: 20} ],\n        icon : thisItem.img,\n        origin: thisItem.uuid,\n        duration: {turns: 1}\n    };    \n    \n    await MidiQOL.socket().executeAsGM(\"createEffects\", {actorUuid: actorUuid, effects: [effectData]}); \n    return; \n\n} else if(args[0].tag === \"DamageBonus\") {\n    const workflow = MidiQOL.Workflow.getWorkflow(args[0].itemUuid);\n    const actorUuid = workflow.tokenUuid;\n    const actorToken = canvas.tokens.get(workflow.tokenId);\n    let bonusHealing = await getProperty(workflow, \"BonusHealing\");\n\n    // remove extra damage effect \n    let effect = await findEffect(actorToken, \"Healing Mortality\");\n    await MidiQOL.socket().executeAsGM(\"removeEffects\", {actorUuid: actorUuid, effects:[effect.id]});\n    \n    // Bonus Healing\n    return {damageRoll: `${bonusHealing}[healing]`, flavor: \"Circle of Morality Bonus Healing\"}; \n}\n\n// Function to test for an effect\nasync function findEffect (target, effectName) {\n    let effectUuid = null;\n    effectUuid = target?.actor.data.effects.find(ef=> ef.data.label === effectName);\n    return effectUuid;\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "midi-qol": {
      "effectActivation": false
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false
    },
    "magicitems": {
      "enabled": false,
      "equipped": false,
      "attuned": false,
      "charges": "0",
      "chargeType": "c1",
      "destroy": false,
      "destroyFlavorText": "reaches 0 charges: it crumbles into ashes and is destroyed.",
      "rechargeable": false,
      "recharge": "0",
      "rechargeType": "t1",
      "rechargeUnit": "r1",
      "sorting": "l"
    },
    "favtab": {
      "isFavorite": true
    },
    "core": {
      "sourceId": "Item.edUabd3mcVcUaLtm"
    },
    "exportSource": {
      "world": "test",
      "system": "dnd5e",
      "coreVersion": "9.266",
      "systemVersion": "1.5.7"
    }
  }
}