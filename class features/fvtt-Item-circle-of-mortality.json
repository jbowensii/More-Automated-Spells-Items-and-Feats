{
  "name": "Circle of Mortality",
  "type": "feat",
  "img": "icons/skills/wounds/blood-cells-disease-green.webp",
  "effects": [
    {
      "_id": "1jud0luaqrwjayvy",
      "changes": [
        {
          "key": "flags.midi-qol.onUseMacroName",
          "mode": 0,
          "value": "ItemMacro.Circle of Mortality,all",
          "priority": 10
        }
      ],
      "disabled": false,
      "duration": {
        "startTime": null,
        "seconds": null,
        "combat": null,
        "rounds": null,
        "turns": null,
        "startRound": null,
        "startTurn": null
      },
      "icon": "icons/skills/wounds/blood-cells-disease-green.webp",
      "label": "Circle of Mortality",
      "origin": "Actor.Uv8E8r17bCEb1o2e.Item.3aDwBUf6nDcPVKz7",
      "transfer": true,
      "flags": {
        "core": {
          "statusId": ""
        },
        "dae": {
          "stackable": "none",
          "durationExpression": "",
          "macroRepeat": "none",
          "specialDuration": [],
          "transfer": true,
          "selfTarget": false,
          "selfTargetAlways": false
        },
        "ActiveAuras": {
          "isAura": false,
          "aura": "None",
          "radius": null,
          "alignment": "",
          "type": "",
          "ignoreSelf": false,
          "height": false,
          "hidden": false,
          "displayTemp": false,
          "hostile": false,
          "onlyOnce": false
        },
        "effective-transferral": {
          "transferBlock": {
            "button": false,
            "chat": false,
            "displayCard": false
          },
          "transferrable": {
            "self": true,
            "target": true
          }
        }
      },
      "tint": null
    }
  ],
  "flags": {
    "ddbimporter": {
      "id": "53464",
      "entityTypeId": "222216831",
      "componentId": 664,
      "componentTypeId": 12168134,
      "class": "Cleric",
      "subclass": "Grave Domain",
      "dndbeyond": {
        "levelScale": null,
        "levelScales": [],
        "limitedUse": [
          {
            "level": null,
            "uses": 1
          }
        ]
      },
      "importId": "4hcm2jmz0inu7t2d",
      "pack": "world.ddb-override",
      "originalItemName": "Circle of Mortality",
      "replaced": true
    },
    "infusions": {
      "infused": false
    },
    "obsidian": {
      "source": {
        "type": "class",
        "text": "Cleric"
      }
    },
    "scene-packer": {
      "hash": "4531c339b19c7000ab4dbbabf6194aed368a32fe",
      "sourceId": "Item.ovikQXLs6Y6zgheY"
    },
    "spellTemplateManager": {
      "stmData": {
        "ignoreDuration": false,
        "spellTexture": "",
        "useTexture": false,
        "alpha": 50,
        "coneOrigin": 1,
        "loopAnimations": true
      }
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Circle of Mortality",
          "type": "script",
          "author": "ldRsJ6Yp5qPydWA1",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "/*****\nCircle of Mortality\n\nv1.1 August 6 2022 jbowens #0415 (Discord) https://github.com/jbowensii/More-Automated-Spells-Items-and-Feats.git \n*****/\n\nif (args[0].macroPass === \"postDamageRoll\") {\n    const workflow = MidiQOL.Workflow.getWorkflow(args[0].itemUuid);\n    let targetTokenUuid = args[0].hitTargetUuids[0];\n    let targetToken = await fromUuid(targetTokenUuid);\n    let targetActor = targetToken.actor;\n\n    // if Target HP > 0 return \n    if (targetActor.data.data.attributes.hp.value != 0) return;\n\n    // check to make sure only one target is selected\n    if ((args[0].targetUuids.length < 1) || (args[0].targetUuids.length > 1)) {\n        ui.notifications.error(\"You need to select a single target.\");\n        return;\n    }\n\n    // compute maximum healing for the spell cast\n    let healingRollMax = 0;\n    for (let i = 0; i < workflow.damageRoll.terms.length; i++)\n        if (workflow.damageRoll.terms[i]?.faces) healingRollMax = healingRollMax + (workflow.damageRoll.terms[i].faces * workflow.damageRoll.terms[i].number);\n        else if (workflow.damageRoll.terms[i]?.number) healingRollMax = healingRollMax + workflow.damageRoll.terms[i].number;\n    let bonusHealing = (healingRollMax - workflow.damageRoll.total);\n    await setProperty(workflow, \"BonusHealing\", bonusHealing);\n\n    return;\n\n} else if (args[0].tag === \"DamageBonus\") {\n    console.log(\"MACRO | bonus healing application\");\n    const workflow = MidiQOL.Workflow.getWorkflow(args[0].itemUuid);\n    const actorUuid = workflow.tokenUuid;\n    const actorToken = canvas.tokens.get(workflow.tokenId);\n    let bonusHealing = await getProperty(workflow, \"BonusHealing\");\n\n    // Bonus Healing\n    if (bonusHealing > 0) {\n        await setProperty(workflow, \"BonusHealing\", 0);\n        return { damageRoll: `${bonusHealing}[healing]`, flavor: \"Circle of Mortality Bonus Healing\" };\n    } else return;\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        },
        "name": "Circle of Mortality",
        "type": "script",
        "scope": "global",
        "command": "/*****\nCircle of Mortality\n\nv2.0 December 18 2022 jbowens #0415 (Discord) https://github.com/jbowensii/More-Automated-Spells-Items-and-Feats.git \n*****/\n\nif (args[0].macroPass === \"postDamageRoll\") {\n    const workflow = MidiQOL.Workflow.getWorkflow(args[0].itemUuid);\n    let targetTokenUuid = args[0].hitTargetUuids[0];\n    let targetToken = await fromUuid(targetTokenUuid);\n    let targetActor = targetToken.actor;\n\n    // if Target HP > 0 return \n    if (targetActor.system.attributes.hp.value != 0) return;\n\n    // check to make sure only one target is selected\n    if ((args[0].targetUuids.length < 1) || (args[0].targetUuids.length > 1)) {\n        ui.notifications.error(\"You need to select a single target.\");\n        return;\n    }\n\n    // compute maximum healing for the spell cast\n    let healingRollMax = 0;\n    for (let i = 0; i < workflow.damageRoll.terms.length; i++)\n        if (workflow.damageRoll.terms[i]?.faces) healingRollMax = healingRollMax + (workflow.damageRoll.terms[i].faces * workflow.damageRoll.terms[i].number);\n        else if (workflow.damageRoll.terms[i]?.number) healingRollMax = healingRollMax + workflow.damageRoll.terms[i].number;\n    let bonusHealing = (healingRollMax - workflow.damageRoll.total);\n    await setProperty(workflow, \"BonusHealing\", bonusHealing);\n\n    return;\n\n} else if (args[0].tag === \"DamageBonus\") {\n    const workflow = MidiQOL.Workflow.getWorkflow(args[0].itemUuid);\n    const actorUuid = workflow.tokenUuid;\n    const actorToken = canvas.tokens.get(workflow.tokenId);\n    let bonusHealing = await getProperty(workflow, \"BonusHealing\");\n\n    // Bonus Healing\n    if (bonusHealing > 0) {\n        await setProperty(workflow, \"BonusHealing\", 0);\n        return { damageRoll: `${bonusHealing}[healing]`, flavor: \"Circle of Mortality Bonus Healing\" };\n    } else return;\n}",
        "author": "paMZuKDupk0GHKFn",
        "_id": null,
        "img": "icons/svg/dice-target.svg",
        "folder": null,
        "sort": 0,
        "ownership": {
          "default": 0
        },
        "flags": {},
        "_stats": {
          "systemId": null,
          "systemVersion": null,
          "coreVersion": null,
          "createdTime": null,
          "modifiedTime": null,
          "lastModifiedBy": null
        }
      }
    },
    "midi-qol": {
      "effectActivation": false
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false
    },
    "magicitems": {
      "enabled": false,
      "equipped": false,
      "attuned": false,
      "charges": "0",
      "chargeType": "c1",
      "destroy": false,
      "destroyFlavorText": "reaches 0 charges: it crumbles into ashes and is destroyed.",
      "rechargeable": false,
      "recharge": "0",
      "rechargeType": "t1",
      "rechargeUnit": "r1",
      "sorting": "l"
    },
    "favtab": {
      "isFavorite": true
    },
    "core": {
      "sourceId": "Item.edUabd3mcVcUaLtm"
    },
    "cf": {
      "id": "temp_92357bvnxs9"
    },
    "exportSource": {
      "world": "5e-test-world",
      "system": "dnd5e",
      "coreVersion": "10.291",
      "systemVersion": "2.0.3"
    }
  },
  "system": {
    "description": {
      "value": "<p>[PLACE YOUR DESCRIPTION HERE]</p>\n<p>Â </p>\n<details>\n<summary><strong>VERSION INFO</strong></summary>\n<p>v1.0 May 7 2022</p>\n<p>jbowens #0415 (Discord)</p>\n<p>https://github.com/jbowensii/More-Automated-Spells-Items-and-Feats.git</p>\n</details>",
      "chat": "You restore maximum possible HP on each dice (instead of rolling) with healing spells to a creature with 0 HP. You learn the spare the dying cantrip, can cast it as a bonus action, and it has a range of 30 ft.",
      "unidentified": ""
    },
    "source": "XGtE p20",
    "activation": {
      "type": "special",
      "cost": null,
      "condition": ""
    },
    "duration": {
      "value": null,
      "units": ""
    },
    "target": {
      "value": null,
      "width": null,
      "units": "",
      "type": "self"
    },
    "range": {
      "value": null,
      "long": null,
      "units": ""
    },
    "uses": {
      "value": null,
      "max": "",
      "per": "",
      "recovery": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "requirements": "Cleric: Grave Domain",
    "recharge": {
      "value": null,
      "charged": false
    },
    "attunement": 0
  },
  "_stats": {
    "systemId": "dnd5e",
    "systemVersion": "2.0.3",
    "coreVersion": "10.291",
    "createdTime": 1671193286449,
    "modifiedTime": 1671383264079,
    "lastModifiedBy": "paMZuKDupk0GHKFn"
  }
}