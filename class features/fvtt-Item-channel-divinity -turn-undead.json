{
  "name": "Channel Divinity: Turn Undead",
  "type": "feat",
  "img": "icons/magic/holy/barrier-shield-winged-blue.webp",
  "effects": [
    {
      "_id": "3adv1867dmy3nrmn",
      "changes": [
        {
          "key": "flags.midi-qol.onUseMacroName",
          "mode": 0,
          "value": "ItemMacro.\"Channel Divinity: Turn Undead\",all",
          "priority": 1
        }
      ],
      "disabled": false,
      "duration": {
        "startTime": null,
        "seconds": 60,
        "combat": null,
        "rounds": null,
        "turns": null,
        "startRound": null,
        "startTurn": null
      },
      "icon": "icons/magic/death/skull-humanoid-white-blue.webp",
      "label": "Channel Divinity: Turn Undead",
      "origin": "Actor.4okcHmPmM1iBwyFs.Item.0Gd8ADfg2sOZyTyq",
      "transfer": false,
      "flags": {
        "core": {
          "statusId": "true"
        },
        "dae": {
          "stackable": "none",
          "durationExpression": "",
          "macroRepeat": "none",
          "specialDuration": [],
          "transfer": false,
          "selfTarget": false,
          "selfTargetAlways": false
        },
        "ActiveAuras": {
          "isAura": false,
          "aura": "None",
          "radius": null,
          "alignment": "",
          "type": "",
          "ignoreSelf": false,
          "height": false,
          "hidden": false,
          "displayTemp": false,
          "hostile": false,
          "onlyOnce": false
        },
        "effective-transferral": {
          "transferBlock": {
            "button": false,
            "chat": false,
            "displayCard": false
          },
          "transferrable": {
            "self": true,
            "target": true
          }
        }
      },
      "tint": null
    }
  ],
  "flags": {
    "scene-packer": {
      "hash": "3ecf4938494013ce84ded434f74c3e8b79bef01a",
      "sourceId": "Item.mfOrCKB6p1puoaUP"
    },
    "spellTemplateManager": {
      "stmData": {
        "ignoreDuration": false,
        "spellTexture": "",
        "useTexture": false,
        "alpha": 50,
        "coneOrigin": 1,
        "loopAnimations": true
      }
    },
    "magicitems": {
      "enabled": false,
      "equipped": false,
      "attuned": false,
      "charges": "0",
      "chargeType": "c1",
      "destroy": false,
      "destroyFlavorText": "reaches 0 charges: it crumbles into ashes and is destroyed.",
      "rechargeable": false,
      "recharge": "0",
      "rechargeType": "t1",
      "rechargeUnit": "r1",
      "sorting": "l"
    },
    "midi-qol": {
      "effectActivation": false,
      "forceCEOff": false,
      "onUseMacroName": "[all]ItemMacro"
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false,
      "autoFailFriendly": false,
      "offHandWeapon": false,
      "ignoreTotalCover": false
    },
    "core": {
      "sourceId": "Item.r5SIR5IwtjxLYHvO"
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Channel Divinity: Turn Undead",
          "type": "script",
          "author": "KBnld8ZLhMcDSTkg",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "/*****\nCleric: Turn Undead\n\nUSEAGE : ACTIVATE TO CHANNEL DIVINITY : TURN UNDEAD\nClick on this item to activate the turn undead.  \nPlease remember to setup usage consumption in the itme itself.  \n\nThis Macro requires a GAME LEVEL MACRO: MAKE DEAD \n\nv1.4 August 13 2022 jbowens #0415 (Discord) https://github.com/jbowensii/More-Automated-Spells-Items-and-Feats.git \n*****/\n// if (!game.modules.get(\"warpgate\")?.active) return ui.notifications.error(\"Turn Undead requires warpgate module\");\n\nif (args[0].macroPass === \"preambleComplete\") {\n    let workflow = MidiQOL.Workflow.getWorkflow(args[0].uuid);\n    // I am stealing the activation condition as a string for the creature type I want to hit\n    const activationCondition = args[0].itemData.data.activation.condition.toLowerCase();\n    let immunity = [\"Turn Immunity\"];\n    for (let target of workflow.targets) {\n        let creatureType = target.actor.data.data.details.type;\n        // remove targets that are not creatures (aka PCs etc)\n        if ((creatureType === null) || (creatureType === undefined)) {\n            workflow.targets.delete(target);\n        }\n        // remove creatures that are not undead \n        else if (!([creatureType.value.toLowerCase(), creatureType.subtype.toLowerCase()].includes(activationCondition.toLowerCase()))) {\n            workflow.targets.delete(target);\n        }\n        // remove creatures with turn immunity\n        else if (target.actor.items.find(i => immunity.includes(i.name))) {\n            workflow.targets.delete(target);\n        }\n\n        // check for i, if so give advanatage on tragets next save\n        let resistance = [\"Turn Resistance\"];\n        if (target.actor.items.find(i => resistance.includes(i.name))) {\n            // add resistance to next save \n            await markTurnResistance(target.actor, args);\n        }\n\n        game.user.updateTokenTargets(Array.from(workflow.targets).map(t => t.id));\n    }\n} else if (args[0].macroPass === \"postSave\") {\n    let workflow = MidiQOL.Workflow.getWorkflow(args[0].uuid);\n    const pcActor = workflow.actor;\n\n    let crDestroy = 0.0;\n    if (workflow.targets.size === 0) return;\n    let actorClass = pcActor.classes.cleric.data.data.levels;\n    if (actorClass > 16) crDestroy = 4;\n    else if (actorClass > 13) crDestroy = 3;\n    else if (actorClass > 10) crDestroy = 2;\n    else if (actorClass > 7) crDestroy = 1;\n    else if (actorClass > 4) crDestroy = 0.5;\n\n    // set HP = 0 for all targets of the CR or less that have been turned\n    for (let target of workflow.failedSaves) {\n        if (target.actor.data.data.details.cr < crDestroy) {\n            //let target = failedSave.actor;\n            let maxHP = Number(target.actor.data.data.attributes.hp.max);\n            let updates = {\n                actor: { \"data.attributes.hp.value\": 0, \"data.attributes.hp.max\": maxHP }\n            };\n            let mutateCallbacks = \"\";\n            await warpgate.mutate(target.document, updates, mutateCallbacks, { permanent: true });\n        } else {\n            // set frightened for all those undead above the CR that were not destoryed\n            console.log(\"MACRO TEST | target actor: %O\", target.actor);\n            console.log(\"MACRO TEST | add frightened: %O\", target);\n            let thisActor = target.uuid;\n            game.dfreds.effectInterface.addEffect({ effectName: 'Frightened', thisActor });\n        }\n    }\n    return;\n}\n\n// if the character has resistance to the new damage type, set vulnerability to negate it\nasync function markTurnResistance(target, args) {\n    const effectData = {\n        label: \"Turn Resistance\",\n        icon: \"systems/dnd5e/icons/skills/affliction_21.jpg\",\n        origin: args.uuid,\n        changes: [{\n            \"key\": \"flags.midi-qol.advantage.ability.check.wis\",\n            \"value\": 1,\n            \"mode\": 0,\n            \"priority\": 20\n        }],\n        disabled: false,\n        flags: {\n            dae: {\n                specialDuration: [\"isSave\"]\n            }\n        }\n    }\n    await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: target.uuid, effects: [effectData] });\n    return;\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        },
        "name": "Channel Divinity: Turn Undead",
        "type": "script",
        "scope": "global",
        "command": "/*****\nCleric: Turn Undead\n\nUSEAGE : ACTIVATE TO CHANNEL DIVINITY : TURN UNDEAD\nClick on this item to activate the turn undead.  \nPlease remember to setup usage consumption in the itme itself.  \n\nThis Macro requires a GAME LEVEL MACRO: MAKE DEAD \n\nv2.0 December 18 2022 jbowens #0415 (Discord) https://github.com/jbowensii/More-Automated-Spells-Items-and-Feats.git \n*****/\n// if (!game.modules.get(\"warpgate\")?.active) return ui.notifications.error(\"Turn Undead requires warpgate module\");\n\nif (args[0].macroPass === \"preambleComplete\") {\n    let workflow = MidiQOL.Workflow.getWorkflow(args[0].uuid);\n    // I am stealing the activation condition as a string for the creature type I want to hit\n    const activationCondition = args[0].itemData.system.activation.condition.toLowerCase();\n    let immunity = [\"Turn Immunity\"];\n    for (let target of workflow.targets) {\n        let creatureType = target.actor.system.details.type;\n        // remove targets that are not creatures (aka PCs etc)\n        if ((creatureType === null) || (creatureType === undefined)) {\n            workflow.targets.delete(target);\n        }\n        // remove creatures that are not undead \n        else if (!([creatureType.value.toLowerCase(), creatureType.subtype.toLowerCase()].includes(activationCondition.toLowerCase()))) {\n            workflow.targets.delete(target);\n        }\n        // remove creatures with turn immunity\n        else if (target.actor.items.find(i => immunity.includes(i.name))) {\n            workflow.targets.delete(target);\n        }\n\n        // check for i, if so give advanatage on tragets next save\n        let resistance = [\"Turn Resistance\"];\n        if (target.actor.items.find(i => resistance.includes(i.name))) {\n            // add resistance to next save \n            await markTurnResistance(target.actor, args);\n        }\n\n        game.user.updateTokenTargets(Array.from(workflow.targets).map(t => t.id));\n    }\n} else if (args[0].macroPass === \"postSave\") {\n    let workflow = MidiQOL.Workflow.getWorkflow(args[0].uuid);\n    const pcActor = workflow.actor;\n\n    let crDestroy = 0.0;\n    if (workflow.targets.size === 0) return;\n    let actorClass = pcActor.classes.cleric.system.levels;\n    if (actorClass > 16) crDestroy = 4;\n    else if (actorClass > 13) crDestroy = 3;\n    else if (actorClass > 10) crDestroy = 2;\n    else if (actorClass > 7) crDestroy = 1;\n    else if (actorClass > 4) crDestroy = 0.5;\n\n    // set HP = 0 for all targets of the CR or less that have been turned\n    for (let target of workflow.failedSaves) {\n        if (target.actor.system.details.cr < crDestroy) {\n            //let target = failedSave.actor;\n            let maxHP = Number(target.actor.system.attributes.hp.max);\n            let updates = {\n                actor: { \"data.attributes.hp.value\": 0, \"data.attributes.hp.max\": maxHP }\n            };\n            let mutateCallbacks = \"\";\n            await warpgate.mutate(target.document, updates, mutateCallbacks, { permanent: true });\n        }\n    }\n    return;\n}\n\n// if the character has resistance to the new damage type, set vulnerability to negate it\nasync function markTurnResistance(target, args) {\n    const effectData = {\n        label: \"Turn Resistance\",\n        icon: \"systems/dnd5e/icons/skills/affliction_21.jpg\",\n        origin: args.uuid,\n        changes: [{\n            \"key\": \"flags.midi-qol.advantage.ability.check.wis\",\n            \"value\": 1,\n            \"mode\": 0,\n            \"priority\": 20\n        }],\n        disabled: false,\n        flags: {\n            dae: {\n                specialDuration: [\"isSave\"]\n            }\n        }\n    }\n    await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: target.uuid, effects: [effectData] });\n    return;\n}",
        "author": "paMZuKDupk0GHKFn",
        "_id": null,
        "img": "icons/svg/dice-target.svg",
        "folder": null,
        "sort": 0,
        "ownership": {
          "default": 0
        },
        "flags": {},
        "_stats": {
          "systemId": null,
          "systemVersion": null,
          "coreVersion": null,
          "createdTime": null,
          "modifiedTime": null,
          "lastModifiedBy": null
        }
      }
    },
    "exportSource": {
      "world": "5e-test-world",
      "system": "dnd5e",
      "coreVersion": "10.291",
      "systemVersion": "2.0.3"
    },
    "cf": {
      "id": "temp_92357bvnxs9",
      "path": "Class Features",
      "color": "#0000ff"
    },
    "favtab": {
      "isFavorite": true
    },
    "ddbimporter": {
      "pack": "world.ddb-override",
      "id": "74143",
      "entityTypeId": "222216831",
      "componentId": 110,
      "componentTypeId": 12168134,
      "class": "Cleric",
      "subclass": "Grave Domain",
      "dndbeyond": {
        "levelScale": null,
        "levelScales": [],
        "limitedUse": [
          {
            "level": null,
            "uses": 1
          },
          {
            "level": null,
            "uses": 1
          }
        ]
      },
      "importId": "h0fgg2cviptcizbi",
      "originalItemName": "Channel Divinity: Turn Undead",
      "replaced": true
    },
    "siftoolkit": {
      "SIFData": {
        "ignoreDuration": false,
        "texture": "",
        "useTexture": false,
        "alpha": 50,
        "coneOrigin": 1,
        "loopAnimations": true,
        "playTemplateAudio": false,
        "playDamageAudio": false,
        "playSaveAudio": false,
        "clip": "",
        "volume": 100
      }
    }
  },
  "system": {
    "description": {
      "value": "<p>[PLACE YOUR DESCRIPTION HERE]</p>\n<p> </p>\n<details>\n<summary><strong>SETUP:</strong></summary>\n<p>Please remember to link the use of this ability to a character sheet resource under the item details Resource Consumption dropdown.</p>\n<img src=\"https://user-images.githubusercontent.com/76136571/161775726-fb67bb97-5fd1-45c5-8301-bbb17e2d0f1d.png\" width=\"569\" /></details>\n<p> </p>\n<details>\n<summary><strong>VERSION INFO</strong></summary>\n<p>v1.4 August 13 2022</p>\n<p>jbowens #0415 (Discord)</p>\n<p>https://github.com/jbowensii/More-Automated-Spells-Items-and-Feats.git</p>\n</details>",
      "chat": "",
      "unidentified": ""
    },
    "source": "PHB p194",
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": "undead"
    },
    "duration": {
      "value": null,
      "units": "inst"
    },
    "target": {
      "value": 30,
      "width": null,
      "units": "ft",
      "type": "creature"
    },
    "range": {
      "value": null,
      "long": null,
      "units": "spec"
    },
    "uses": {
      "value": null,
      "max": "",
      "per": "",
      "recovery": ""
    },
    "consume": {
      "type": "charges",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "other",
    "attackBonus": "0",
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "requirements": "Cleric",
    "recharge": {
      "value": null,
      "charged": false
    },
    "attunement": 0
  },
  "_stats": {
    "systemId": "dnd5e",
    "systemVersion": "2.0.3",
    "coreVersion": "10.291",
    "createdTime": 1671193286536,
    "modifiedTime": 1671739554893,
    "lastModifiedBy": "paMZuKDupk0GHKFn"
  }
}