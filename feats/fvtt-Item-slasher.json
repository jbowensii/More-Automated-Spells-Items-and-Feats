{
  "name": "Slasher",
  "type": "feat",
  "img": "icons/skills/melee/blade-tips-triple-bent-white.webp",
  "effects": [
    {
      "_id": "5LsTTEo1APQ0w520",
      "changes": [
        {
          "key": "flags.midi-qol.onUseMacroName",
          "mode": 0,
          "value": "ItemMacro.Slasher,preDamageRoll",
          "priority": 20
        }
      ],
      "disabled": false,
      "duration": {
        "startTime": null,
        "seconds": null,
        "combat": null,
        "rounds": null,
        "turns": null,
        "startRound": null,
        "startTurn": null
      },
      "icon": "icons/skills/melee/blade-tips-triple-bent-white.webp",
      "label": "Slasher",
      "origin": "Item.Aj6rMauKBQFNOrub",
      "transfer": true,
      "flags": {
        "core": {
          "statusId": ""
        },
        "dae": {
          "stackable": "none",
          "durationExpression": "",
          "macroRepeat": "none",
          "specialDuration": [],
          "transfer": true,
          "selfTarget": false,
          "selfTargetAlways": false
        },
        "ActiveAuras": {
          "isAura": false,
          "aura": "None",
          "radius": null,
          "alignment": "",
          "type": "",
          "ignoreSelf": false,
          "height": false,
          "hidden": false,
          "displayTemp": false,
          "hostile": false,
          "onlyOnce": false
        },
        "effective-transferral": {
          "transferBlock": {
            "button": false,
            "chat": false,
            "displayCard": false
          },
          "transferrable": {
            "self": true,
            "target": true
          }
        }
      },
      "tint": null
    }
  ],
  "flags": {
    "scene-packer": {
      "hash": "d913e9bc5dc8425e3e59f9ab3eb0564a040ec873",
      "sourceId": "Item.2RmqCkH8yzz3EMvf"
    },
    "spellTemplateManager": {
      "stmData": {
        "ignoreDuration": false,
        "spellTexture": "",
        "useTexture": false,
        "alpha": 50,
        "coneOrigin": 1,
        "loopAnimations": true
      }
    },
    "magicitems": {
      "enabled": false,
      "equipped": false,
      "attuned": false,
      "charges": "0",
      "chargeType": "c1",
      "destroy": false,
      "destroyFlavorText": "reaches 0 charges: it crumbles into ashes and is destroyed.",
      "rechargeable": false,
      "recharge": "0",
      "rechargeType": "t1",
      "rechargeUnit": "r1",
      "sorting": "l"
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Slasher",
          "type": "script",
          "author": "ldRsJ6Yp5qPydWA1",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "/*****\nSlasher\n\nUSAGE: Automatic just place on a character \n\nv1.0 May 7 2022 jbowens #0415 (Discord) https://github.com/jbowensii/More-Automated-Spells-Items-and-Feats.git \n*****/\n\n// make sure the attempted hit was made with a weapon attack\nif (![\"mwak\", \"rwak\"].includes(args[0].item.data.actionType)) return;\n\nif (args[0].macroPass === \"preDamageRoll\") {\n    const workflow = MidiQOL.Workflow.getWorkflow(args[0].itemUuid);\n    let targetToken = await fromUuid(args[0].hitTargetUuids[0]);\n    let targetActor = targetToken.actor;\n    let theItem = workflow.item.data.data;\n\n    if (theItem.damage.parts[0][1] !== \"slashing\") return;   // not a slashing weapon  \n    else {\n        let effect = await findEffect(targetActor, \"Reduced Movement\");\n        if (!effect) await applyReduceMovementEffect(targetActor, args[0].uuid);\n        if (workflow.isCritical) await applyAttackDisadvantageEffect(targetActor, args[0].uuid);\n    }\n    return;\n}\n\n// Apply the fightened effect to the target\nasync function applyReduceMovementEffect(target, originUuid) {\n    let effectData = {\n        label: \"Reduced Movement\",\n        icon: \"systems/dnd5e/icons/items/equipment/boots-leather.jpg\",\n        origin: originUuid,\n        changes: [{ \"key\": \"data.attributes.movement.all\", \"value\": `-10`, \"mode\": 0, \"priority\": 20 }],\n        disabled: false,\n        flags: { dae: { specialDuration: [\"turnStartSource\"] }, }\n    }\n    await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: target.uuid, effects: [effectData] });\n}\n\n// Apply the fightened effect to the target\nasync function applyAttackDisadvantageEffect(target, originUuid) {\n    let effectData = {\n        label: \"Attack Disadvantage\",\n        icon: \"systems/dnd5e/icons/skills/weapon_08.jpg\",\n        origin: originUuid,\n        changes: [{ \"key\": \"flags.midi-qol.disadvantage.attack.all\", \"value\": `1`, \"mode\": 0, \"priority\": 20 }],\n        disabled: false,\n        flags: { dae: { specialDuration: [\"turnStartSource\"] }, }\n    }\n    await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: target.uuid, effects: [effectData] });\n}\n\n// Function to test for an effect\nasync function findEffect(thisActor, effectName) {\n    let effectUuid = null;\n    effectUuid = thisActor?.effects.find(ef => ef.data.label === effectName);\n    return effectUuid;\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        },
        "name": "Slasher",
        "type": "script",
        "scope": "global",
        "command": "/*****\nSlasher\n\nUSAGE: Automatic just place on a character \n\nv2.0 December 22 2022 jbowens #0415 (Discord) https://github.com/jbowensii/More-Automated-Spells-Items-and-Feats.git \n*****/\n\n// make sure the attempted hit was made with a weapon attack\nif (![\"mwak\", \"rwak\"].includes(args[0].item.system.actionType)) return;\n\nif (args[0].macroPass === \"preDamageRoll\") {\n    const workflow = MidiQOL.Workflow.getWorkflow(args[0].itemUuid);\n    let targetToken = await fromUuid(args[0].hitTargetUuids[0]);\n    let targetActor = targetToken.actor;\n    let theItem = workflow.item;\n\n    if (theItem.labels.damageTypes !== \"Slashing\") return;   // not a slashing weapon  \n    else {\n        let effect = await findEffect(targetActor, \"Reduced Movement\");\n        if (!effect) await applyReduceMovementEffect(targetActor, args[0].uuid);\n        if (workflow.isCritical) await applyAttackDisadvantageEffect(targetActor, args[0].uuid);\n    }\n    return;\n}\nreturn;\n\n//---------------------------------- MY FUNCTIONS -------------------------------------\n\n// Apply the reduce movement to the target\nasync function applyReduceMovementEffect(target, originUuid) {\n    let effectData = {\n        label: \"Reduced Movement\",\n        icon: \"icons/equipment/feet/boots-leather-engraved-brown.webp\",\n        origin: originUuid,\n        changes: [{ \"key\": \"data.attributes.movement.all\", \"value\": `-10`, \"mode\": 0, \"priority\": 20 }],\n        disabled: false,\n        flags: { dae: { specialDuration: [\"turnStartSource\"] }, }\n    }\n    await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: target.uuid, effects: [effectData] });\n}\n\n// Apply the Disadvantage effect to the target\nasync function applyAttackDisadvantageEffect(target, originUuid) {\n    let effectData = {\n        label: \"Attack Disadvantage\",\n        icon: \"icons/magic/light/beam-explosion-pink-purple.webp\",\n        origin: originUuid,\n        changes: [{ \"key\": \"flags.midi-qol.disadvantage.attack.all\", \"value\": `1`, \"mode\": 0, \"priority\": 20 }],\n        disabled: false,\n        flags: { dae: { specialDuration: [\"turnStartSource\"] }, }\n    }\n    await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: target.uuid, effects: [effectData] });\n}\n\n// Function to find an effect on an actor\nasync function findEffect(thisActor, effectName) {\n    let effectUuid = null;\n    effectUuid = thisActor?.effects.find(ef => ef.label === effectName);\n    return effectUuid;\n}",
        "author": "paMZuKDupk0GHKFn",
        "_id": null,
        "img": "icons/svg/dice-target.svg",
        "folder": null,
        "sort": 0,
        "ownership": {
          "default": 0
        },
        "flags": {},
        "_stats": {
          "systemId": null,
          "systemVersion": null,
          "coreVersion": null,
          "createdTime": null,
          "modifiedTime": null,
          "lastModifiedBy": null
        }
      }
    },
    "core": {
      "sourceId": "Item.5PUe0GiheEHUomoR"
    },
    "exportSource": {
      "world": "5e-test-world",
      "system": "dnd5e",
      "coreVersion": "10.291",
      "systemVersion": "2.0.3"
    },
    "cf": {
      "id": "temp_b676eyusztv"
    },
    "favtab": {
      "isFavorite": true
    }
  },
  "system": {
    "description": {
      "value": "<p>[PLACE YOUR DESCRIPTION HERE]</p>\n<p>Â </p>\n<details>\n<summary><strong>VERSION INFO</strong></summary>\n<p>v1.0 May 7 2022</p>\n<p>jbowens #0415 (Discord)</p>\n<p>https://github.com/jbowensii/More-Automated-Spells-Items-and-Feats.git</p>\n</details>",
      "chat": "",
      "unidentified": ""
    },
    "source": "TCoE p81",
    "activation": {
      "type": "special",
      "cost": 0,
      "condition": ""
    },
    "duration": {
      "value": null,
      "units": ""
    },
    "target": {
      "value": null,
      "width": null,
      "units": "",
      "type": "self"
    },
    "range": {
      "value": null,
      "long": null,
      "units": ""
    },
    "uses": {
      "value": null,
      "max": "",
      "per": "",
      "recovery": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": null,
    "actionType": "",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "requirements": "Feat: Slasher",
    "recharge": {
      "value": null,
      "charged": false
    },
    "attunement": 0
  },
  "_stats": {
    "systemId": "dnd5e",
    "systemVersion": "2.0.3",
    "coreVersion": "10.291",
    "createdTime": 1671193294453,
    "modifiedTime": 1671800605300,
    "lastModifiedBy": "paMZuKDupk0GHKFn"
  }
}