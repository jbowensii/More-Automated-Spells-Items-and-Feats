{
  "name": "Orcish Fury",
  "type": "feat",
  "img": "icons/skills/social/intimidation-impressing.webp",
  "effects": [
    {
      "_id": "YJK1tQQIV2Ycrqy0",
      "changes": [
        {
          "key": "flags.dnd5e.DamageBonusMacro",
          "mode": 0,
          "value": "ItemMacro.Orcish Fury,postDamageRoll",
          "priority": 1
        }
      ],
      "disabled": false,
      "duration": {
        "startTime": null,
        "seconds": null,
        "combat": null,
        "rounds": null,
        "turns": null,
        "startRound": null,
        "startTurn": null
      },
      "icon": "icons/skills/social/intimidation-impressing.webp",
      "label": "Orcish Fury",
      "origin": "Item.5PUe0GiheEHUomoR",
      "transfer": true,
      "flags": {
        "core": {
          "statusId": ""
        },
        "dae": {
          "stackable": "none",
          "durationExpression": "",
          "macroRepeat": "none",
          "specialDuration": [],
          "transfer": true,
          "selfTarget": false,
          "selfTargetAlways": false
        },
        "ActiveAuras": {
          "isAura": false,
          "aura": "None",
          "radius": null,
          "alignment": "",
          "type": "",
          "ignoreSelf": false,
          "height": false,
          "hidden": false,
          "displayTemp": false,
          "hostile": false,
          "onlyOnce": false
        },
        "dnd5e-helpers": {
          "rest-effect": "Ignore"
        },
        "effective-transferral": {
          "transferBlock": {
            "button": false,
            "chat": false,
            "displayCard": false
          },
          "transferrable": {
            "self": true,
            "target": true
          }
        }
      },
      "tint": null
    }
  ],
  "flags": {
    "scene-packer": {
      "hash": "b417197b3fd7ac6ee7f11e625811173a92cfe85c",
      "sourceId": "Item.tTE3yM6tSTBI3hxf"
    },
    "spellTemplateManager": {
      "stmData": {
        "ignoreDuration": false,
        "spellTexture": "",
        "useTexture": false,
        "alpha": 50,
        "coneOrigin": 1,
        "loopAnimations": true
      }
    },
    "magicitems": {
      "enabled": false,
      "equipped": false,
      "attuned": false,
      "charges": "0",
      "chargeType": "c1",
      "destroy": false,
      "destroyFlavorText": "reaches 0 charges: it crumbles into ashes and is destroyed.",
      "rechargeable": false,
      "recharge": "0",
      "rechargeType": "t1",
      "rechargeUnit": "r1",
      "sorting": "l"
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Orcish Fury",
          "type": "script",
          "author": "ldRsJ6Yp5qPydWA1",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "/*****\nOrcish Fury\n\nUSEAGE : AUTOMATIC\nThis item should be placed on the character that has the Orcish Fury Feat.  \nUntil used, during each melee attack the player will be prompted if they\nwant to use this ability.\n \nv1.0 May 7 2022 jbowens #0415 (Discord) https://github.com/jbowensii/More-Automated-Spells-Items-and-Feats.git \nBug fixes provided by tposney#1462 and callbritton#5405 thank you both\n*****/\n\n// make sure the attempted hit was made with a weapon attack\n\nif (![\"mwak\", \"rwak\"].includes(args[0].item.data.actionType)) return;\n\nconst pcActor = MidiQOL.MQfromActorUuid(args[0].actorUuid);\nif (args[0].hitTargetUuids.length === 0) return;\nconst target = await fromUuid(args[0].hitTargetUuids[0] ?? \"\");\n\n// check to make sure only one target is selected\nif ((args[0].targetUuids.length < 1) || (args[0].targetUuids.length > 1)) {\n    ui.notifications.error(\"You need to select a single target.\");\n    return;\n}\n\n// Find Superiority Dice Resource\nlet orcishFury = await findSheetResource(pcActor, \"Orcish Fury\");\nif (!orcishFury) {\n    ui.notifications.error(\"Could not find a resource labeled 'Orcish Fury'...\");\n    return;\n} else if (orcishFury.value < 1) return;\n\n// create a dialog and prompt to spend a superiority die\nlet dialog = new Promise((resolve) => {\n    new Dialog({\n        // localize this text\n        title: \"Orcish Fury:\",\n        content: \"<p>Use Orcish Fury for extra damage?</p>\",\n        buttons: {\n            one: {\n                icon: '<p> </p><img src = \"systems/dnd5e/icons/skills/red_01.jpg\" width=\"60\" height=\"60\"></>',\n                label: \"<p>Yes</p>\",\n                callback: () => resolve(true)\n            },\n            two: {\n                icon: '<p> </p><img src = \"systems/dnd5e/icons/skills/weapon_28.jpg\" width=\"60\" height=\"60\"></>',\n                label: \"<p>No</p>\",\n                callback: () => { resolve(false) }\n            }\n        },\n        default: \"two\"\n    }).render(true);\n});\nlet choice = await dialog;\n\nif (!choice) return;\n\n// if YES subtract a superiorty die\nawait decrimentSheetResource(pcActor, \"Orcish Fury\", 1);\n\n// get the live MIDI-QOL workflow so we can make changes\nconst diceMult = args[0].isCritical ? 2 : 1;\nlet baseDice = (1 * diceMult);\nlet die = args[0].item.data.damage.parts[0][0].split('[')[0];   // everything before the [\ndie = die.toLowerCase();                                        // convert the string to lower case\nlet baseDie = die.split('d')[1];                                //everything after the 'd' the die size and any mods\nlet furyRoll = (baseDice + \"d\" + baseDie);                          // assemble the FuryRoll\n\nconst damageType = args[0].item.data.damage.parts[0][1];        // get teh damage type from the weapon in use   \n\nreturn { damageRoll: `${furyRoll}[${damageType}]`, flavor: \"Orcish Fury\" };\n\n\n//---------------------------------- MY FUNCTIONS -------------------------------------\n\n// Test for available resource\n// Return resource object\nasync function findSheetResource(testActor, resourceName) {\n    let resources = Object.values(testActor.data.data.resources);\n    let foundResource = resources.find(i => i.label.toLowerCase() === resourceName.toLowerCase());\n    return foundResource;\n}\n\n// Decriment available resource\nasync function decrimentSheetResource(testActor, resourceName, numValue) {\n    let actorDup = duplicate(testActor);\n    let resources = Object.values(actorDup.data.resources);\n    let foundResource = resources.find(i => i.label.toLowerCase() === resourceName.toLowerCase());\n    foundResource.value = foundResource.value - numValue;\n    await testActor.update(actorDup);\n    return;\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        },
        "name": "Orcish Fury",
        "type": "script",
        "scope": "global",
        "command": "/*****\nOrcish Fury\n\nUSEAGE : AUTOMATIC\nThis item should be placed on the character that has the Orcish Fury Feat.  \nUntil used, during each melee attack the player will be prompted if they\nwant to use this ability.\n \nv2.0 December 18 2022 jbowens #0415 (Discord) https://github.com/jbowensii/More-Automated-Spells-Items-and-Feats.git \nBug fixes provided by tposney#1462 and callbritton#5405 thank you both\n*****/\n\n// make sure the attempted hit was made with a weapon attack\n\nif (![\"mwak\", \"rwak\"].includes(args[0].item.system.actionType)) return;\n\nconst pcActor = MidiQOL.MQfromActorUuid(args[0].actorUuid);\nif (args[0].hitTargetUuids.length === 0) return;\nconst target = await fromUuid(args[0].hitTargetUuids[0] ?? \"\");\n\n// check to make sure only one target is selected\nif ((args[0].targetUuids.length < 1) || (args[0].targetUuids.length > 1)) {\n    ui.notifications.error(\"You need to select a single target.\");\n    return;\n}\n\n// Find Superiority Dice Resourcet\nlet orcishFury = await findSheetResource(pcActor, \"Orcish Fury\");\nif (!orcishFury) {\n    ui.notifications.error(\"Could not find a resource labeled 'Orcish Fury'...\");\n    return;\n} else if (orcishFury.value < 1) return;\n\n// create a dialog and prompt to spend a superiority die\nlet dialog = new Promise((resolve) => {\n    new Dialog({\n        // localize this text\n        title: \"Orcish Fury:\",\n        content: \"<p>Use Orcish Fury for extra damage?</p>\",\n        buttons: {\n            one: {\n                icon: '<p> </p><img src = \"icons/skills/melee/unarmed-punch-fist.webp\" width=\"60\" height=\"60\"></>',\n                label: \"<p>Yes</p>\",\n                callback: () => resolve(true)\n            },\n            two: {\n                icon: '<p> </p><img src = \"icons/svg/cancel.svg\" width=\"60\" height=\"60\"></>',\n                label: \"<p>No</p>\",\n                callback: () => { resolve(false) }\n            }\n        },\n        default: \"two\"\n    }).render(true);\n});\nlet choice = await dialog;\n\nif (!choice) return;\n\n// if YES subtract a superiorty die\nawait decrimentSheetResource(pcActor, \"Orcish Fury\", 1);\n\n// get the live MIDI-QOL workflow so we can make changes\nconst diceMult = args[0].isCritical ? 2 : 1;\nlet baseDice = (1 * diceMult);\nlet die = args[0].item.system.damage.parts[0][0].split('[')[0];  // everything before the [\ndie = die.toLowerCase();                                         // convert the string to lower case\nlet baseDie = die.split('d')[1];                                 //everything after the 'd' the die size and any mods\nlet furyRoll = (baseDice + \"d\" + baseDie);                       // assemble the FuryRoll\n\nconst damageType = args[0].item.system.damage.parts[0][1];       // get teh damage type from the weapon in use   \n\nreturn { damageRoll: `${furyRoll}[${damageType}]`, flavor: \"Orcish Fury\" };\n\n//---------------------------------- MY FUNCTIONS -------------------------------------\n\n// Test for available resource\n// Return resource object\nasync function findSheetResource(testActor, resourceName) {\n    let resources = Object.values(testActor.system.resources);\n    let foundResource = resources.find(i => i.label.toLowerCase() === resourceName.toLowerCase());\n    return foundResource;\n}\n\n// Decriment available resource\nasync function decrimentSheetResource(testActor, resourceName, numValue) {\n    const resourceKey = Object.keys(testActor.system.resources).find(k => testActor.system.resources[k].label.toLowerCase() === resourceName.toLowerCase());\n    console.log(\"MACRO TEST | FIND RESOURCE %O\",resourceKey);\n    let newResources = duplicate(testActor.system.resources);\n    newResources[resourceKey].value -= 1;\n    await actor.update({\"system.resources\": newResources});\n    return;\n}",
        "author": "paMZuKDupk0GHKFn",
        "_id": null,
        "img": "icons/svg/dice-target.svg",
        "folder": null,
        "sort": 0,
        "ownership": {
          "default": 0
        },
        "flags": {},
        "_stats": {
          "systemId": null,
          "systemVersion": null,
          "coreVersion": null,
          "createdTime": null,
          "modifiedTime": null,
          "lastModifiedBy": null
        }
      }
    },
    "core": {
      "sourceId": "Item.5PUe0GiheEHUomoR"
    },
    "exportSource": {
      "world": "5e-test-world",
      "system": "dnd5e",
      "coreVersion": "10.291",
      "systemVersion": "2.0.3"
    },
    "cf": {
      "id": "temp_b676eyusztv"
    },
    "favtab": {
      "isFavorite": true
    },
    "link-item-resource-5e": {
      "resource-link": ""
    }
  },
  "system": {
    "description": {
      "value": "<p>[PLACE YOUR DESCRIPTION HERE]</p>\n<p> </p>\n<details>\n<summary><strong>VERSION INFO</strong></summary>\n<p>v1.0 May 7 2022</p>\n<p>jbowens #0415 (Discord)</p>\n<p>https://github.com/jbowensii/More-Automated-Spells-Items-and-Feats.git</p>\n</details>",
      "chat": "",
      "unidentified": ""
    },
    "source": "XGtE p73",
    "activation": {
      "type": "special",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": null,
      "units": ""
    },
    "target": {
      "value": null,
      "width": null,
      "units": "",
      "type": "self"
    },
    "range": {
      "value": null,
      "long": null,
      "units": "self"
    },
    "uses": {
      "value": null,
      "max": "",
      "per": "",
      "recovery": ""
    },
    "consume": {
      "type": "attribute",
      "target": "",
      "amount": 1
    },
    "ability": null,
    "actionType": "",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "requirements": "Feat: Orcish Fury",
    "recharge": {
      "value": null,
      "charged": false
    },
    "attunement": 0
  },
  "_stats": {
    "systemId": "dnd5e",
    "systemVersion": "2.0.3",
    "coreVersion": "10.291",
    "createdTime": 1671193294455,
    "modifiedTime": 1671415275363,
    "lastModifiedBy": "paMZuKDupk0GHKFn"
  }
}